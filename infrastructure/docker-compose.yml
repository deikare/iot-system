version: '3.8'
services:
  influxdb:
    hostname: influxdb
    image: iot-influx:latest
    volumes:
      # Mount for influxdb data directory and configuration
      - ./influxdbv2:/.influxdbv2
    ports:
      - "8086:8086"
    environment: 
      - INFLUXD_QUERY_CONCURRENCY=30
      - INFLUXD_QUERY_QUEUE_SIZE=50
      - INFLUXD_TLS_CERT=/etc/ssl/certs/influxdb.crt
      - INFLUXD_TLS_KEY=/etc/ssl/private/influxdb.key
      - INFLUXD_TLS_MIN_VERSION=1.2
      - INFLUXD_TLS_STRICT_CIPHERS=false
    entrypoint: influxd 
# Use the influx cli to set up an influxdb instance. 
  influxdb_cli:
    links:
      - influxdb
    image: iot-influx.cli:latest
# Use these same configurations parameters in your telegraf configuration, mytelegraf.conf.
    entrypoint: influx setup --bucket mybucket -t mytoken -o myorg --username=admin --password=admin123 --host=https://influxdb:8086 -f
      # Wait for the influxd service in the influxdb container has fully bootstrapped before trying to setup an influxdb instance with the influxdb_cli service. 
    restart: on-failure:10
    depends_on:
      - influxdb
  telegraf:
    image: telegraf
    links:
      - influxdb
    volumes:
      # Mount for telegraf config
      - ./telegraf/mytelegraf.conf:/etc/telegraf/telegraf.conf
    depends_on:
      - influxdb_cli

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  kafka-ssl-1:
    image: confluentinc/cp-kafka:latest
    #hostname: kafka1
    network_mode: host
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: SSL://localhost:19092
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: 1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: 1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: 1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - ./certs/kafka:/etc/kafka/secrets
    extra_hosts:
      - "moby:127.0.0.1"

  kafka-ssl-2:
    image: confluentinc/cp-kafka:latest
    #hostname: kafka2
    network_mode: host
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: SSL://localhost:29092
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: 2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: 2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: 2_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - ./certs/kafka:/etc/kafka/secrets
    extra_hosts:
      - "moby:127.0.0.1"

  kafka-ssl-3:
    image: confluentinc/cp-kafka:latest
    #hostname: kafka3
    network_mode: host
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: SSL://localhost:39092
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: 3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: 3_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: 3_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - ./certs/kafka:/etc/kafka/secrets
    extra_hosts:
      - "moby:127.0.0.1"